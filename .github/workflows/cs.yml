name: CS

on: [ pull_request ]

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  ecs:
    name: Coding Standards (PHP)

    runs-on: ubuntu-latest

    timeout-minutes: 5

    strategy:
      matrix:
        php-version:
          - 8.2

    steps:
      - uses: actions/checkout@v4.1.3
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: intl, ctype, iconv

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - uses: "ramsey/composer-install@v3"

      - name: Run EasyCodingStandard
        run: vendor/bin/ecs check

  rector:
    name: Rector (PHP)

    runs-on: ubuntu-latest

    timeout-minutes: 5

    strategy:
      matrix:
        php-version:
          - 8.2

    steps:
      - uses: actions/checkout@v4.1.3
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: intl, ctype, iconv

      - name: "Set up problem matchers for PHP"
        run: "echo \"::add-matcher::${{ runner.tool_cache }}/php.json\""

      - uses: "ramsey/composer-install@v3"

      - name: Run Rector
        run: vendor/bin/rector --dry-run

  composer-normalize:
    name: Composer Normalize

    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version:
          - 8.2

    steps:
      - uses: actions/checkout@v4.1.3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: intl, ctype, iconv

      - uses: "ramsey/composer-install@v3"

      - name: Run composer normalize
        run: composer normalize --no-update-lock --diff --dry-run

  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.3
        with:
          fetch-depth: 0

      - uses: oven-sh/setup-bun@v1
      - run: bun install
      - run: bun run build

      - name: Super-Linter
        uses: github/super-linter@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: 2.1.x
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSS_FILE_NAME: .stylelintrc.json
          VALIDATE_YAML: true
          VALIDATE_JSON: true
          VALIDATE_XML: true
          VALIDATE_MD: true
          VALIDATE_GITLEAKS: true
          VALIDATE_BASH: true
          VALIDATE_PHP_BUILTIN: true
          LINTER_RULES_PATH: .
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_CSS: true
